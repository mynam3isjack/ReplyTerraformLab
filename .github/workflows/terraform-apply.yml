name: Terraform-Apply

on:
  push:
    branches: [ lab ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'
env:
  GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
  TF_IN_AUTOMATION: true
  ARM_CLIENT_ID: 404cb109-2150-4ce9-9615-b7755da17209
  ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
  ARM_SUBSCRIPTION_ID: 71a3925d-615b-4b25-82e5-f7c9e6f24e6b
  ARM_TENANT_ID: ce849bab-cc1c-465b-b62e-18f07c9ac198

jobs:
  terraform-plan:
    name: Terraform Plan
    # if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1
      
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        id: init
        env:
          # overriding HOME before making global git config changes
          HOME: ${{ runner.temp }}
        run: |
          # use github token transparently for cloning terraform module repositories
          git config --global --add http."https://atc-github.azure.cloud.bmw/".extraheader "AUTHORIZATION: basic $(echo -n "x-access-token:$GITHUB_TOKEN" | base64)"
          terraform init -upgrade

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan (lab)
        id: plan-lab
        run: |
          terraform workspace new lab
          terraform plan -no-color

      - name: Terraform Plan (prod)
        id: plan-prod
        run: |
          terraform workspace new prod
          terraform plan -no-color

      - name: Outputs
        uses: actions/github-script@v4
        env:
          PLAN_lab: "terraform\n${{ steps.plan-lab.outputs.stdout }}"
          PLAN_PROD: "terraform\n${{ steps.plan-prod.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan (lab) üìñ\`${{ steps.plan-lab.outcome }}\`
            #### Terraform Plan (prod) üìñ\`${{ steps.plan-prod.outcome }}\`

            <details><summary>Show Plan (lab)</summary>

            \`\`\`terraform\n
            ${process.env.PLAN_lab}
            \`\`\`

            </details>

            <details><summary>Show Plan (prod)</summary>

            \`\`\`terraform\n
            ${process.env.PLAN_PROD}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  terraform-apply-lab:
    name: Terraform Apply (lab)
    # if: github.ref == 'lab' && github.event_name == 'push'
    runs-on: ubuntu-latest

    environment:
      name: lab

    steps:
      - name: Checkout with Submodules
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        env:
          # overriding HOME before making global git config changes
          HOME: ${{ runner.temp }}
        run: |
          # use github token transparently for cloning terraform module repositories
          git config --global --add http."https://atc-github.azure.cloud.bmw/".extraheader "AUTHORIZATION: basic $(echo -n "x-access-token:$GITHUB_TOKEN" | base64)"
          terraform init -upgrade

      - name: Terraform Apply
        run: |
          terraform workspace select lab
          terraform apply -auto-approve

  terraform-apply-prod:
    name: Terraform Apply (prod)
    # if: github.ref == 'lab' && github.event_name == 'push'
    needs: terraform-apply-lab
    runs-on: ubuntu-latest

    environment:
      name: prod

    steps:
      - name: Checkout with Submodules
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        env:
          # overriding HOME before making global git config changes
          HOME: ${{ runner.temp }}
        run: |
          # use github token transparently for cloning terraform module repositories
          git config --global --add http."https://atc-github.azure.cloud.bmw/".extraheader "AUTHORIZATION: basic $(echo -n "x-access-token:$GITHUB_TOKEN" | base64)"
          terraform init -upgrade

      - name: Terraform Apply
        run: |
          terraform workspace select prod
          terraform apply -auto-approve
